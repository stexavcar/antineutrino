protocol value_d {
  
}

/**
 * A compile-time representation of what becomes at runtime a small_integer_t.
 */
protocol small_integer_d is value_d {
  
  @static def proto.new(value is Integer) => new small_integer_d {
    value := value
  }
  
  def this.encode => this.value << 2;
  
}

/**
 * A compile-time representation of what becomes at runtime an object_t.
 */
protocol object_d is value_d {
  
  @static def proto.new() => new object_d {
    offset := null
  }
  
  /**
   * Has this object been written yet?
   */
  def this.is_written => (this.offset != null);

  /**
   * How many fields does the serialized representation of this object have?
   */
  def this.field_count => 3;
  
  /**
   * Sets the offset where this object has been written.  Can only be
   * called once, so a given object can only be serialized once.
   */
  def this.mark_as_written(offset) {
    assert_true(not this.is_written);
    this.offset := offset;
  }

  def this.encode {
    assert_true(this.is_written);
    this.offset | 1;
  }
  
}
