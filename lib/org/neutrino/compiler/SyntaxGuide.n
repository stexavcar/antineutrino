protocol SyntaxGuide;

def kCall := 3;
def kLiteral := 7;
def kGlobal := 10;

protocol NodeGuide;

def (this is NodeGuide).resolve(value) -> this.data.resolve(value);

protocol CallGuide is NodeGuide;

def (this is CallGuide).argc(cursor) -> this.data[cursor + 2];

def (this is CallGuide).name(cursor)
 -> this.data.literal_at(cursor + 1);

def (this is CallGuide).argument(cursor, index)
 -> this.data[cursor + 3 + index];
 
protocol LiteralGuide is NodeGuide;

def (this is LiteralGuide).value(cursor)
 -> this.data.literal_at(cursor + 1);
 
protocol GlobalGuide is NodeGuide;

def (this is GlobalGuide).name(cursor)
 -> this.data.literal_at(cursor + 1);

def SyntaxGuide.new(code, literals) {
  def result := new SyntaxGuide {
    code := code,
    literals := literals,
    guides := new HashMap()
  }
  result.guides[kCall] := new CallGuide { data := result };
  result.guides[kLiteral] := new LiteralGuide { data := result };
  result.guides[kGlobal] := new GlobalGuide { data := result };
  result;
}

def (this is SyntaxGuide).resolve(index) {
  def opcode := this[index];
  def guide := this.guides[opcode];
  if guide = null then
    print("Unknown opcode #${opcode}.");
  guide;
}

def (this is SyntaxGuide)[index] -> this.code[index];

def (this is SyntaxGuide).literal_at(index)
  -> this.literals[this[index]];
