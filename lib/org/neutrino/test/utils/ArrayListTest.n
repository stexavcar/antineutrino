def UtilsTest::test_array_lists() {
  this.on_start("array lists");
  def kInitialSize := 5;
  def a := new ArrayList(kInitialSize);
  assert_equal(kInitialSize, a.length);
  (0 .. kInitialSize).for_each(fn (i) -> assert_equal(null, a[i]));
  (0 .. kInitialSize).for_each(fn (i) -> a[i] := i);
  (0 .. kInitialSize).for_each(fn (i) -> assert_equal(i, a[i]));
  (0 .. 10).for_each(fn (i) {
    a.add(i);
    assert_equal(kInitialSize + i + 1, a.length);
  });
  (0 .. kInitialSize).for_each(fn (i) -> assert_equal(i, a[i]));
  (0 .. 10).for_each(fn (i) -> assert_equal(i, a[kInitialSize + i]));

  (* Construct from sequence *)
  def b := new ArrayList(0 .. 10);
  (0 .. 10).for_each(fn (i) -> assert_equal(i, b[i]));

  (* Construct from ArrayList (also a Sequence) *)
  def c := new ArrayList(b);
  b.for_each(fn (el) -> assert_equal(el, c[el]));
}
