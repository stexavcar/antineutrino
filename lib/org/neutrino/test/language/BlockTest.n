def (this is LanguageTest).test_blocks() {
  this.test_expression_blocks();
  this.test_statement_blocks();
}

def (this is LanguageTest).test_expression_blocks() {
  this.on_start("expression blocks");
  assert_true({1; 2;} = 2);
  assert_true(4 = {3; 4;});
}

def (this is LanguageTest).test_statement_blocks() {
  this.on_start("statement blocks");
  assert_true(11 = block_foo_1());
  assert_true(12 = block_foo_2());
  assert_true(13 = block_foo_3());
  assert_true(4 = (new X32 { }.y));
}

def block_foo_1() {
  1 + 2;
  {
    3 + 4;
  }
  5 + 6;
}

def block_foo_2() {
  { { { 3 + 6; 5 + 7; } } }
}

def block_foo_3() {
  { { { 5 + 8; 6 + 7; }; }; };
}

protocol X32;

def (this is X32).y => {1; 2; 3; 4;}