def LanguageTest::test_primitives() {
  this.test_integer_operators();
  this.test_singletons();
  this.test_conditionals();
  this.test_number_encoding();
}

def LanguageTest::test_integer_operators() {
  this.on_start("integer operators");
  assert_true((1 + 1) = 2);
  assert_true((1 + 2) = 3);
  assert_true((2 + 1) = 3);
  assert_true(1 < 2);
}

def LanguageTest::test_singletons() {
  this.on_start("singletons");
  assert_true(true);
  assert_true(false.negate());
}

def LanguageTest::test_conditionals() {
  this.on_start("conditionals");
  assert_true((if true then 1 else 2) = 1);
  assert_true((if false then 1 else 2) = 2);
  assert_true((if true then 1) = 1);
  assert_true((if false then 1) = null);
}

def tne_sum(n) -> if n = 0 then 0 else n + tne_sum(n - 1);

def LanguageTest::test_number_encoding() {
  this.on_start("number encoding");
  assert_true(tne_sum(256) = 32896);
}
