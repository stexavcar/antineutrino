protocol ArrayBackedStream {

  def this.capacity -> this.data.length;

  def this.extend_capacity(capacity) {
    def old_contents := this.data;
    def new_contents := this.new_backing_array(capacity * 2);
    for (i : 0 .. this.length)
      new_contents[i] := old_contents[i];
    this.data := new_contents;
  }

  def this.add(obj) -> this.add_to_stream(obj);

  def this.add_to_stream(byte) {
    if this.length >= this.capacity then
      this.extend_capacity(this.length);
    def index := this.length;
    this.data[index] := byte;
    this.length := index + 1;
  }

  def this[index] -> this.data[index];

}
