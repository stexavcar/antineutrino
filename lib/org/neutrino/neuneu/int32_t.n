/* 32 bit signed native integers. */
@no_override
protocol int32_t {

  @static @inline @type(int32_t) @intrinsic("int32.cast")
  def proto.of(x is Integer) => new int32_t(x);

  @inline @type(int32_t) @intrinsic("add_int32")
  def this+(that is int32_t);

  @inline @type(int32_t) @intrinsic("sub_int32")
  def this-(that is int32_t);

  @inline @type(int32_t) @intrinsic("and_int32")
  def this&(that is int32_t);

  @inline @type(int32_t) @intrinsic("sar_int32")
  def this>>(dist is int32_t);

  @inline @type(int32_t) @intrinsic("shl_int32")
  def this<<(dist is int32_t);

  @inline @type(bool_t) @intrinsic("eq_int32")
  def this=(that is int32_t);

  @inline @type(bool_t) @intrinsic("neq_int32")
  def this!=(that is int32_t);

}
