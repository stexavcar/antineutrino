protocol EntryPoint;

@boot_level_0
@entry_point("neuneu") // Make this callable from the java implementation
@neuneu_entry_point // Mark this as the entry point for the neutrino implementation
def Boot.entry_point() {
  LibC.exit(Boot.boot());
}

// --- B o o t ---

protocol Boot;

@boot_level_0
def Boot.hello_world() {
  LibC.putchar(int32_t.of(72));
  LibC.putchar(int32_t.of(101));  
  LibC.putchar(int32_t.of(108));
  LibC.putchar(int32_t.of(108));
  LibC.putchar(int32_t.of(111));
  LibC.putchar(int32_t.of(32));  
  LibC.putchar(int32_t.of(87));  
  LibC.putchar(int32_t.of(111));  
  LibC.putchar(int32_t.of(114));  
  LibC.putchar(int32_t.of(108));  
  LibC.putchar(int32_t.of(100));  
  LibC.putchar(int32_t.of(33));  
  LibC.putchar(int32_t.of(10));  
}

@boot_level_0
@type("int32_t")
def Boot.boot() {
  Boot.hello_world();
  def tests := new neu_neu_tests_t();
  def result := tests.run();
  tests.free();
  result;
}
