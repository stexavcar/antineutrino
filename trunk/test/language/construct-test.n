def simple_record_test() {
  def x := new { a: 0, b: 1, c: 2 };
  assert x.a = 0;
  assert x.b = 1;
  assert x.c = 2;
  def y := new { c: "x", b: "y", a: "z" };
  assert y.a = "z";
  assert y.b = "y";
  assert y.c = "x";
}

protocol Fooable {
  def foo() -> 13;
}

def protocol_test() {
  def x := new Fooable() { a: 0, b: 1 };
  assert x.a = 0;
  assert x.b = 1;
  assert x.foo() = 13;
}

protocol Nirk {
  static def new(obj) {
    assert not obj.was_called;
    obj.was_called := true;
    return null;
  }
}

def simple_constructor_call_test() {
  var o := new { was_called: false };
  var n := new Nirk(o);
  assert o.was_called;
  assert n = null;
}

def main() {
  simple_record_test();
  protocol_test();
  simple_constructor_call_test();
}
