protocol Operand;

protocol Register is Operand;

protocol Memory is Operand;

def Memory.at(base) -> new Memory(base, 0);

def Memory.at_disp(base, disp) -> new Memory(base, disp);

protocol Symbol is Operand;

protocol LocalSymbol;

def Symbol.local(name) -> new LocalSymbol { name := name };

protocol ExternalCallTarget;

def Symbol.dylib(name) -> new ExternalCallTarget { name := name };
