protocol Operand;

protocol Register is Operand;

protocol Memory is Operand {

  @static def proto.at(base) => new Memory(base, 0);

  @static def proto.at_disp(base, disp) => new Memory(base, disp);

}

protocol Immediate;

def Integer is Immediate;

protocol Symbol is Immediate {
  
  @static def proto.dylib(name) => new DylibSymbol { name := name };
  
  @static def proto.local(name) => new LocalSymbol { name := name };
  
  @static def proto.string(value) => new StringSymbol { value := value };
  
  @static def proto.data(value) => new DataSymbol { value := value };

}

protocol LocalSymbol is Symbol;

protocol DylibSymbol is Symbol;

protocol StringSymbol is Symbol;

protocol DataSymbol is Symbol;
