def (this is LanguageTest).test_methods() {
  this.test_simple_multimethods();
  this.test_first_level_arguments();
  this.test_higher_level_arguments();
}

def (this is LanguageTest).test_simple_multimethods() {
  this.on_start("simple multimethods");
  assert_true((1 + 1) = 2);
  assert_true(("1" + "1") = "11");
}

def id(x) => x;
def first(x, y) => x;
def second(x, y) => y;
def third(x, y, z) => z;

def (this is LanguageTest).test_first_level_arguments() {
  this.on_start("first level arguments");
  assert_true(id(4) = 4);
  assert_true(id(5) = 5);
  assert_true(first(2, 3) = 2);
  assert_true(first(4, 5) = 4);
  assert_true(second(6, 7) = 7);
  assert_true(second(8, 9) = 9);
  assert_true(third(10, 11, 12) = 12);
}

def minus(a) => fn (b) => a - b;

def minus2(a, b) => fn () => a - b;

def minus3(a) => fn() => fn (b) => a - b;

def (this is LanguageTest).test_higher_level_arguments() {
  this.on_start("second level arguments");
  assert_true(minus(1)(1) = 0);
  assert_true(minus(2)(1) = 1);
  assert_true(minus2(1, 1)() = 0);
  assert_true(minus2(2, 1)() = 1);
  assert_true(minus3(6)()(4) = 2);
}
