(* Container for all the language tests. *)
protocol LanguageTest;

def new_language_test -> new LanguageTest { count := new_ref(0) };

def kPrintProgress := false;

@entry_point("test")
def test_main() {
  def test := new_language_test();
  test.main();
}

(* Main entry point for running the tests and reporting progress. *)
def LanguageTest::main() {
  this.run();
  print("Ran " + this.count().get().to_string() + " tests.");
}

(* This should be called at the beginning of all tests. *)
def LanguageTest::on_start(name) {
  def index := this.count().get();
  if kPrintProgress then print("Testing " + name);
  this.count().set(index + 1);
}
  
def LanguageTest::run() {
  this.test_primitives();
  this.test_methods();
  this.test_arrays();
  this.test_local_definitions();
  this.test_blocks();
  this.test_refs();
  this.test_objects();
  this.test_loops();
  this.test_protocols();
  this.test_lambdas();
  this.test_logical_operators();
  this.test_indexing();
}

def assert_true(cond) -> if not cond then fail();

def assert_false(cond) -> assert_true(not cond);

def assert_equal(expected, found) -> assert_true(expected = found);
