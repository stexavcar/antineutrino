native def native_open_file(name);
native def native_close_file(handle);
native def native_read_file(handle);

# An open file.  Note that files are not closed automatically but must
# be closed explicitly by calling =File.read=.
protocol File {

  # Closes this file.
  def close() -> native_close_file(this.handle());
  
  # Reads the contents of this file and returns them in form of a
  # string
  def read() -> native_read_file(this.handle());

  def to_string() -> "#<a File: ${this.name()}>";

}

# Opens and returns the file with the specified name.  If an error
# occurs while opening the file =null= is returned.
def open(name) {
  def handle := native_open_file(name);
  if (handle = null) return null;
  return new File() { handle: handle, name: name };
}
