case: try parse ${type:expr} * ${name:expr} = ${value:expr} ;
emit: pTryParse(${type}, ${name}, ${value});

case: try alloc ${type:expr} * ${name:expr} ( ${args:expr} ) in ${space:expr} ;
emit: pTryAllocInSpace(${space}, ${type}, ${name}, (${args}));

case: try alloc ${type:expr} * ${name:expr} = ${value:expr} ;
emit: pTryAlloc(${type}, ${name}, ${value});

case: try alloc ref < ${type:expr} > ${name:expr} = ${value:expr} ;
emit: pTrySafeAlloc(${type}, ${name}, ${value});

case: try ${type:expr} * ${name:expr} = ${value:expr} ;
emit: pTryDeclare(${type}, ${name}, ${value});

case: try ${x:expr} ;
emit: p${domain}Try(${x});
