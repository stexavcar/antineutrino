library (
  name = 'neutrino-lib',
  domain = 'Neutrino',
  flags = mode,
  srcs = [
    'code/ast.h',
    'code/ast.cc',
    'io/miniheap.h',
    'io/miniheap-inl.h',
    'io/miniheap.cc',
    'io/read.h',
    'io/read.cc',
    'io/read-inl.h',
    'plankton/codec.h',
    'plankton/codec-inl.h',
    'plankton/match.h',
    'plankton/match.cc',
    'plankton/plankton.h',
    'plankton/plankton-inl.h',
    'plankton/plankton.cc',
    'platform/abort.h',
    'platform/abort.cc',
    'platform/spawn.h',
    'runtime/gc-safe.h',
    'runtime/gc-safe-inl.h',
    'runtime/gc-safe.cc',
    'runtime/heap.h',
    'runtime/heap-inl.h',
    'runtime/heap.cc',
    'runtime/ref.h',
    'runtime/ref-inl.h',
    'runtime/ref.cc',
    'runtime/roots.h',
    'runtime/roots-inl.h',
    'runtime/roots.cc',
    'runtime/runtime.h',
    'runtime/runtime-inl.h',
    'runtime/runtime.cc',
    'utils/arena.h',
    'utils/arena-inl.h',
    'utils/arena.cc',
    'utils/array.h',
    'utils/array-inl.h',
    'utils/buffer.h',
    'utils/buffer-inl.h',
    'utils/check.h',
    'utils/check-inl.h',
    'utils/check.cc',
    'utils/flags.h',
    'utils/flags.cc',
    'utils/global.h',
    'utils/hash-map.h',
    'utils/hash-map-inl.h',
    'utils/log.h',
    'utils/log.cc',
    'utils/pollock.h',
    'utils/string.h',
    'utils/string-inl.h',
    'utils/string.cc',
    'utils/smart-ptrs.h',
    'utils/smart-ptrs-inl.h',
    'utils/types.h',
    'utils/vector.h',
    'utils/vector-inl.h',
    'value/condition.h',
    'value/condition-inl.h',
    'value/value.h',
    'value/value-inl.h',
    'value/value.cc',
    'value/pointer.h',
    'value/pointer-inl.h',
    '$platform-files'
  ]
)

flags (
  name = 'xflags',
  extend = mode,
  includepath = ['/usr/include/cairo']
)

program (
  name = 'x',
  domain = 'Neutrino',
  flags = 'xflags',
  srcs = [
    'main/main.cc',
    'main/main.h',
    'platform/cairo.h',
    'platform/cairo.cc',
    'platform/frame.h',
    '$frame-files',
    ':neutrino-lib',
    '@X11',
    '@cairo'
  ]
)

program (
  name = 'neutrino',
  domain = 'Neutrino',
  flags = mode,
  srcs = [
    'main/neutrino.cc',
    ':neutrino-lib',
  ]
)
